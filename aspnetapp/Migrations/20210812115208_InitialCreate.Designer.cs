// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using aspnetapp.Database;

namespace aspnetapp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210812115208_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("aspnetapp.Model.DtmAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ActionName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmActions");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ApplicationCaption")
                        .HasColumnType("text");

                    b.Property<string>("ApplicationName")
                        .HasColumnType("text");

                    b.Property<int>("ApplicationSiteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmApplications");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmApplicationXmlObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ApplicationXmlObjectsApplicationId")
                        .HasColumnType("integer");

                    b.Property<int>("ApplicationXmlObjectsHtmlTableCellId")
                        .HasColumnType("integer");

                    b.Property<int>("ApplicationXmlObjectsXmlObjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmApplicationXmlObjects");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmDatabase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DatabaseApplicationString")
                        .HasColumnType("text");

                    b.Property<string>("DatabaseConnString")
                        .HasColumnType("text");

                    b.Property<string>("DatabaseName")
                        .HasColumnType("text");

                    b.Property<int?>("DatabaseTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmDatabases");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmDatabaseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("DatabaseTypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmDatabaseTypes");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmField", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("FieldAutoIncrement")
                        .HasColumnType("boolean");

                    b.Property<int?>("FieldAutoIncrementSeed")
                        .HasColumnType("integer");

                    b.Property<int?>("FieldAutoIncrementStep")
                        .HasColumnType("integer");

                    b.Property<string>("FieldCaption")
                        .HasColumnType("text");

                    b.Property<string>("FieldDataTypeString")
                        .HasColumnType("text");

                    b.Property<bool?>("FieldDisplayOnly")
                        .HasColumnType("boolean");

                    b.Property<bool?>("FieldDoNotDisplay")
                        .HasColumnType("boolean");

                    b.Property<int?>("FieldFkfieldId")
                        .HasColumnType("integer");

                    b.Property<int?>("FieldHeight")
                        .HasColumnType("integer");

                    b.Property<bool?>("FieldIsFilter")
                        .HasColumnType("boolean");

                    b.Property<bool>("FieldIsPk")
                        .HasColumnType("boolean");

                    b.Property<bool?>("FieldIsQueryStringFilter")
                        .HasColumnType("boolean");

                    b.Property<int?>("FieldMaxChars")
                        .HasColumnType("integer");

                    b.Property<string>("FieldName")
                        .HasColumnType("text");

                    b.Property<int?>("FieldOrder")
                        .HasColumnType("integer");

                    b.Property<string>("FieldParamValue")
                        .HasColumnType("text");

                    b.Property<bool?>("FieldReadOnly")
                        .HasColumnType("boolean");

                    b.Property<bool?>("FieldRequired")
                        .HasColumnType("boolean");

                    b.Property<int>("FieldTableId")
                        .HasColumnType("integer");

                    b.Property<int>("FieldTypeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("FieldUnique")
                        .HasColumnType("boolean");

                    b.Property<int?>("FieldUpfieldId")
                        .HasColumnType("integer");

                    b.Property<string>("FieldUrlLink")
                        .HasColumnType("text");

                    b.Property<int?>("FieldViewDescriptionChars")
                        .HasColumnType("integer");

                    b.Property<int?>("FieldWidth")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmFields");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmFieldType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FieldTypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmFieldTypes");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmFilter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FilterCustomSelect")
                        .HasColumnType("text");

                    b.Property<string>("FilterDefaultValue")
                        .HasColumnType("text");

                    b.Property<int?>("FilterFieldId")
                        .HasColumnType("integer");

                    b.Property<int?>("FilterFieldOperatorId")
                        .HasColumnType("integer");

                    b.Property<string>("FilterName")
                        .HasColumnType("text");

                    b.Property<int>("FilterOperatorId")
                        .HasColumnType("integer");

                    b.Property<int>("FilterOrderBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmFilters");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmFilterGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FilterGroupFilterId")
                        .HasColumnType("integer");

                    b.Property<int>("FilterGroupFilterOperatorId")
                        .HasColumnType("integer");

                    b.Property<string>("FilterGroupName")
                        .HasColumnType("text");

                    b.Property<int>("FilterGroupOperatorId")
                        .HasColumnType("integer");

                    b.Property<int>("FilterGroupOrderBy")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmFilterGroups");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmFilterParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FilterParametersFilterId")
                        .HasColumnType("integer");

                    b.Property<int>("FilterParametersParameterId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmFilterParameters");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmFkValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FkValueFieldId")
                        .HasColumnType("integer");

                    b.Property<int>("FkValueFkfieldId")
                        .HasColumnType("integer");

                    b.Property<bool?>("FkvalueDoNotDisplay")
                        .HasColumnType("boolean");

                    b.Property<int?>("FkvalueOrder")
                        .HasColumnType("integer");

                    b.Property<string>("FkvalueSeparator")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmFkValues");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmFkfield", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("FkfieldKeyFieldId")
                        .HasColumnType("integer");

                    b.Property<int>("FkfieldTableId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmFkfields");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmHtmlTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("HtmlTableName")
                        .HasColumnType("text");

                    b.Property<int>("HtmlTableOrderBy")
                        .HasColumnType("integer");

                    b.Property<string>("HtmlTablePropertiesString")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmHtmlTables");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmHtmlTableCell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("HtmlTableCellCollspan")
                        .HasColumnType("integer");

                    b.Property<int>("HtmlTableCellHtmlTableRowId")
                        .HasColumnType("integer");

                    b.Property<int>("HtmlTableCellOrderBy")
                        .HasColumnType("integer");

                    b.Property<string>("HtmlTableCellPropertiesString")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmHtmlTableCells");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmHtmlTableRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("HtmlTableRowHtmlTableId")
                        .HasColumnType("integer");

                    b.Property<int>("HtmlTableRowOrderBy")
                        .HasColumnType("integer");

                    b.Property<string>("HtmlTableRowPropertiesString")
                        .HasColumnType("text");

                    b.Property<int?>("HtmlTableRowRowspan")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmHtmlTableRows");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmOperator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("OperatorName")
                        .HasColumnType("text");

                    b.Property<string>("OperatorValue")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmOperators");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ParameterName")
                        .HasColumnType("text");

                    b.Property<int>("ParameterParameterTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("ParameterSiteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmParameters");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmParameterType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ParameterTypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmParameterTypes");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmSite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("SiteAppLinkAndroid")
                        .HasColumnType("text");

                    b.Property<string>("SiteAppLinkIos")
                        .HasColumnType("text");

                    b.Property<string>("SiteAppStoreLink")
                        .HasColumnType("text");

                    b.Property<string>("SiteCaption")
                        .HasColumnType("text");

                    b.Property<string>("SiteConfigXml")
                        .HasColumnType("text");

                    b.Property<int?>("SiteDtmdatabaseId")
                        .HasColumnType("integer");

                    b.Property<int?>("SiteDtmuserId")
                        .HasColumnType("integer");

                    b.Property<string>("SiteGooglePlayLink")
                        .HasColumnType("text");

                    b.Property<string>("SiteName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmSites");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("TableAllowPaging")
                        .HasColumnType("boolean");

                    b.Property<bool?>("TableAllowSorting")
                        .HasColumnType("boolean");

                    b.Property<string>("TableCaption")
                        .HasColumnType("text");

                    b.Property<int>("TableDatabaseId")
                        .HasColumnType("integer");

                    b.Property<string>("TableDesc")
                        .HasColumnType("text");

                    b.Property<bool?>("TableDisplayFilter")
                        .HasColumnType("boolean");

                    b.Property<bool?>("TableIsAdd")
                        .HasColumnType("boolean");

                    b.Property<bool?>("TableIsDelete")
                        .HasColumnType("boolean");

                    b.Property<bool?>("TableIsScroll")
                        .HasColumnType("boolean");

                    b.Property<bool?>("TableIsUpdate")
                        .HasColumnType("boolean");

                    b.Property<string>("TableName")
                        .HasColumnType("text");

                    b.Property<int?>("TablePageSize")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmTables");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmTablePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("TablePermissionActionId")
                        .HasColumnType("integer");

                    b.Property<int>("TablePermissionTableId")
                        .HasColumnType("integer");

                    b.Property<int?>("TablePermissionUserGroupId")
                        .HasColumnType("integer");

                    b.Property<int?>("TablePermissionUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmTablePermissions");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmUpfield", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("UpfieldFtploggin")
                        .HasColumnType("text");

                    b.Property<string>("UpfieldFtppath")
                        .HasColumnType("text");

                    b.Property<string>("UpfieldFtpsite")
                        .HasColumnType("text");

                    b.Property<string>("UpfieldPath")
                        .HasColumnType("text");

                    b.Property<int?>("UpfieldTableId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpfieldUnqueNameFieldId")
                        .HasColumnType("integer");

                    b.Property<int?>("UpfieldUploadTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmUpfields");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmUploadType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("UploadTypeName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmUploadTypes");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool?>("UserIsAdministrator")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<string>("UserPassword")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmUsers");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmUserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("UserGroupDescription")
                        .HasColumnType("text");

                    b.Property<string>("UserGroupName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmUserGroups");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmUserGroupsUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("UserGroupsUsersUserGroupId")
                        .HasColumnType("integer");

                    b.Property<int>("UserGroupsUsersUserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmUserGroupsUsers");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmXmlObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("XmlObjectCustomSelect")
                        .HasColumnType("text");

                    b.Property<string>("XmlObjectName")
                        .HasColumnType("text");

                    b.Property<int?>("XmlObjectTableId")
                        .HasColumnType("integer");

                    b.Property<string>("XmlObjectXslFile")
                        .HasColumnType("text");

                    b.Property<string>("XmlObjectXslString")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmXmlObjects");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmXmlObjectParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("XmlObjectParametersParameterId")
                        .HasColumnType("integer");

                    b.Property<int>("XmlObjectParametersXmlObjectId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DtmXmlObjectParameters");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmtestFkTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FkLink")
                        .HasColumnType("text");

                    b.Property<string>("FkValue")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("DtmtestFkTables");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmtestTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("FkId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("InsertDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("TestString")
                        .HasColumnType("text");

                    b.Property<string>("UploadFile")
                        .HasColumnType("text");

                    b.Property<string>("UploadFileName")
                        .HasColumnType("text");

                    b.Property<int?>("UploadId")
                        .HasColumnType("integer");

                    b.Property<string>("UploadName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FkId");

                    b.ToTable("DtmtestTables");
                });

            modelBuilder.Entity("aspnetapp.Model.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmtestTable", b =>
                {
                    b.HasOne("aspnetapp.Model.DtmtestFkTable", "Fk")
                        .WithMany("DtmtestTables")
                        .HasForeignKey("FkId");

                    b.Navigation("Fk");
                });

            modelBuilder.Entity("aspnetapp.Model.DtmtestFkTable", b =>
                {
                    b.Navigation("DtmtestTables");
                });
#pragma warning restore 612, 618
        }
    }
}
